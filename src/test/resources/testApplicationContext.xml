<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	
	http://www.springframework.org/schema/lang
	http://www.springframework.org/schema/lang/spring-lang.xsd

	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd

	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd 
	
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	
	http://www.springframework.org/schema/security
 	http://www.springframework.org/schema/security/spring-security.xsd
	
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">



	<context:component-scan base-package="fr.treeptik" />
	<mvc:annotation-driven />

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:init.sql" />
	</jdbc:initialize-database>

	<!-- <bean id="monitorAspect" class="fr.treeptik.aop.MonitorAspect"> -->

	<!-- </bean> -->

	<!-- <aop:config> -->
	<!-- <aop:aspect id="myAspect" ref="monitorAspect"> -->
	<!-- <aop:pointcut id="savePointCut" -->
	<!-- expression="execution(* fr.treeptik.service.*.save(..)) &amp;&amp; 
		!execution(* fr.treeptik.service.MessageService.save(..))" /> -->
	<!-- <aop:after-returning pointcut-ref="savePointCut" -->
	<!-- method="afterReturningSave" returning="result"/> -->
	<!-- <aop:before method="beforeSave" pointcut-ref="savePointCut" /> -->
	<!-- <aop:after-throwing method="onErrorSave" throwing="e" -->
	<!-- pointcut-ref="savePointCut" /> -->

	<!-- <aop:pointcut id="removePointCut" -->
	<!-- expression="execution(* fr.treeptik.service.*.remove(..))" /> -->
	<!-- <aop:after-returning pointcut-ref="removePointCut" -->
	<!-- method="afterReturningRemove" returning="result"/> -->
	<!-- <aop:before method="beforeRemove" pointcut-ref="removePointCut" /> -->
	<!-- <aop:after-throwing method="onErrorRemove" throwing="e" -->
	<!-- pointcut-ref="removePointCut" /> -->
	<!-- </aop:aspect> -->
	<!-- </aop:config> -->

	<jpa:repositories base-package="fr.treeptik.dao"></jpa:repositories>

	<util:properties id="config" location="classpath:conf.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="fr.treeptik.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>

	</bean>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />


	<!-- SECURITY -->

	<security:global-method-security
		secured-annotations="enabled" />
	<security:http pattern="/ADMIN/images/**" security="none" />
	<security:http pattern="/ADMIN/css/**" security="none" />
	<security:http pattern="/ADMIN/login.jsp*" security="none" />

	<security:http use-expressions="true">
		<security:intercept-url pattern="/ADMIN/**"
			access="hasRole('USER')" />
		<security:intercept-url pattern="/ADMIN/**"
			access="hasRole('USER') or hasRole('ADMIN')" />
		<security:form-login login-page="/ADMIN/signin.html" />
		<security:csrf disabled="true" />
		<security:logout invalidate-session="true"
			logout-success-url="/ADMIN/index.html" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
		
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select login, password, enabled from User where login=?" 
				authorities-by-username-query="select login, roles from User u join User_roles r on u.login=r.User_login where u.login=?"/>
		</security:authentication-provider>

		<security:authentication-provider>
			<security:user-service>
				<security:user name="user1" password="azerty"
					authorities="ROLE_USER, ROLE_ADMIN" />
				<security:user name="user2" password="azerty"
					authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:init.sql" />
	</jdbc:initialize-database>

</beans>
